<?php
/**
 * Implements hook_menu().
 */
function ideal_challenge_menu() {
  $items = array();
  $items['admin/config/user-interface/openideal/ideal-challenge'] = array(
    'title' => 'Default Challenge',
    'access arguments' => array('access content'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ideal_challenge_default_challenge_form'),  
    'file' => 'ideal_challenge.admin.inc',  
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

/**
 * Implements hook_theme()
 */
function ideal_challenge_theme($existing, $type, $theme, $path) {
  return array(
    'ideal_challenge_add_idea' => array(
      'variables' => array(),
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function ideal_challenge_block_info() {
  $blocks = array();
  $blocks['challenge_add_idea'] = array(
    'info' => t('ideal challenge add idea'),
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function ideal_challenge_block_view($delta) {
  switch ($delta) {
    case 'challenge_add_idea':
      $block = array(
        'subject' => t('The Challenge'),
        'content' => theme('ideal_challenge_add_idea'),
      );
      break;
  }
  return $block;
}

function theme_ideal_challenge_add_idea() {
  $output = '';
   // Get the nid (for reference) from the default challenge.
  $challenge_nid = variable_get('default_challenge', NULL);
  
  if (!empty($challenge_nid)) {
    $challenge = views_embed_view('default_challenge', 'block', $challenge_nid);
    $form = drupal_get_form('ideal_challenge_add_idea_form');

    $output .= $challenge; 
    $output .= render($form);
  }
  return $output;
}

/**
 * Generate a block containing a node entry form.
 */
function ideal_challenge_add_idea_form() {
  $form = array();

  $form['header'] = array(
    '#markup' => '<h4 class="ideal-challenge-add-idea">' . t('Be bold! Add your idea:') . '</h4>',
  );
   
  $form['title'] = array(
    '#type' => 'textfield',
    '#title' => t('Title'),
    '#description' => '',  
    '#default_value' => '', 
    '#size' => 60, 
    '#maxlength' => 128, 
    '#required' => TRUE,  
  );
  
  $form['body'] = array(
    '#type' => 'textarea', 
    '#title' => t('Body'),
    '#description' => '',
    '#default_value' => '', 
    '#required' => TRUE
  );
  
  $form['submit'] = array(
    '#type' => 'submit', 
    '#value' => t('Share')
  );
  
  return $form;
}

/**
 * Additional submit handler for the node add form.
 */
function ideal_challenge_add_idea_form_submit($form, &$form_state) { 
  global $user;
  global $language;
  $lang = module_exists('local') ? $language : LANGUAGE_NONE;
  
  // Get the nid (for reference) anf the terms from the default challenge.
  $challenge_nid = variable_get('default_challenge', NULL);
  $challenge = node_load($challenge_nid);
  $obj = entity_metadata_wrapper('node', $challenge);
  $category = $obj->field_category->value();
  
//  $wrp = entity_property_values_create_entity('node');
//  $wrp->save();

  // Building the idea node fro, the title and body from th form,
  // and the challenge reference and category from the default challenge.
  $node = new stdClass();
  $node->language = $lang;
  $node->uid = $user->uid;
  $node->type = 'idea';
  $node->title = $form_state['values']['title'];
  $node->body[$node->language][]['value'] = $form_state['values']['body'];
  $node->field_category[$node->language][]['tid'] = $category->tid;
  $node->field_challenge_ref[$node->language][]['target_id'] = $challenge_nid;
  
  // Saving the node,
  node_object_prepare($node);
  $node = node_submit($node);
  node_save($node); 
  
  drupal_set_message('Your idea was saved');
}